1)
> db.createCollection("aluno", {
...   validator: {
...     $jsonSchema: {
...        bsonType: "object",
...        required: ["nome"],
...        properties: {
...           nome: { bsonType: "string", description: "deve ser uma string e obrigatorio" }
...        }
...     }
...   }
... });
{
        "ok" : 0,
        "errmsg" : "a collection 'academico_trab.aluno' already exists",
        "code" : 48,
        "codeName" : "NamespaceExists"
}
>
> db.createCollection("disciplina", {
...   validator: {
...     $jsonSchema: {
...        bsonType: "object",
...        required: ["nome"],
...        properties: {
...           nome: { bsonType: "string", description: "deve ser uma string e obrigatorio" },
...   cargaHoraria : { bsonType: "int", minimum: 0, description: "deve ser um inteiro maior igual a 0" }
...        }
...     }
...   }
... });
{
        "ok" : 0,
        "errmsg" : "a collection 'academico_trab.disciplina' already exists",
        "code" : 48,
        "codeName" : "NamespaceExists"
}
>
> db.createCollection("professor", {
...   validator: {
...     $jsonSchema: {
...        bsonType: "object",
...        required: ["nome", "titulacao"],
...        properties: {
...           nome: { bsonType: "string", description: "deve ser uma string e obrigatorio" },
...           titulacao: { bsonType: "string", description: "deve ser uma string e obrigatorio" },
...        }
...     }
...   }
... });






2.b)

> db.aluno.insert({id: 1})
WriteResult({
        "nInserted" : 0,
        "writeError" : {
                "code" : 121,
                "errmsg" : "Document failed validation"
 
2.c)
> db.aluno.insert({_id: 1, "nome" : "Jose"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id" : 1, "nome" : "Jose" }     

> db.aluno.insert({_id: 2, "nome" : "MARIA"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id" : 1, "nome" : "Jose" }
{ "_id" : 2, "nome" : "MARIA" }

>  db.aluno.insert({_id: 3, "nome" : "BRUNO"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id" : 1, "nome" : "Jose" }
{ "_id" : 2, "nome" : "MARIA" }
{ "_id" : 3, "nome" : "BRUNO" }

>  db.aluno.insert({_id: 4, "nome" : "CARLA"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id" : 1, "nome" : "Jose" }
{ "_id" : 2, "nome" : "MARIA" }
{ "_id" : 3, "nome" : "BRUNO" }
{ "_id" : 4, "nome" : "CARLA" }

>  db.aluno.insert({_id: 5, "nome" : "PEDRO"})
WriteResult({ "nInserted" : 1 })
> db.aluno.find()
{ "_id" : 1, "nome" : "Jose" }
{ "_id" : 2, "nome" : "MARIA" }
{ "_id" : 3, "nome" : "BRUNO" }
{ "_id" : 4, "nome" : "CARLA" }
{ "_id" : 5, "nome" : "PEDRO" }

